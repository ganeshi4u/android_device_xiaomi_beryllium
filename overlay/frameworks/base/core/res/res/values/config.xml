<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Flag indicating whether we should enable the automatic brightness.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Whether the display blanks itself when transitioning from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">true</bool>

    <!-- Whether the device has fingeprint sensor or not -->
    <bool name="config_hasFingerprintSensor">true</bool>

    <!-- Whether to enable network location overlay which allows network
         location provider to be replaced by an app at run-time. When disabled,
         only the config_networkLocationProviderPackageName package will be
         searched for network location provider, otherwise packages whose
         signature matches the signatures of config_locationProviderPackageNames
         will be searched, and the service with the highest version number will
         be picked. Anyone who wants to disable the overlay mechanism can set it
         to false.
         -->
    <bool name="config_enableNetworkLocationOverlay" translatable="false">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">200%</fraction>

    <!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
    <fraction name="config_maximumScreenDimRatio">29.999996%</fraction>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">6000</integer>

    <!-- Fast brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_fast">200</integer>

    <!-- Slow brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_slow">1</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">128</integer>

	<!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">1</integer>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.

         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined

         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>3.5077</item>
        <item>6.8394</item>
        <item>15.2619</item>
        <item>30.2619</item>
        <item>40.671</item>
        <item>52.3019</item>
        <item>65.2512</item>
        <item>77.37</item>
        <item>90.152</item>
        <item>100.297</item>
        <item>110.385</item>
        <item>135.064</item>
        <item>160.5179</item>
        <item>195.0267</item>
        <item>380.2814</item>
        <item>409.2867</item>
        <item>427.6287</item>
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.

         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0482</item>
        <item>2.543</item>
        <item>3.0253</item>
        <item>3.5077</item>
        <item>4.0824</item>
        <item>4.4748</item>
        <item>5.08</item>
        <item>6.4233</item>
        <item>8.0848</item>
        <item>11.6607</item>
        <item>13.2347</item>
        <item>15.0676</item>
        <item>16.8302</item>
        <item>18.4261</item>
        <item>20.3103</item>
        <item>21.9042</item>
        <item>23.5456</item>
        <item>25.2137</item>
        <item>27.1769</item>
        <item>28.9571</item>
        <item>30.5244</item>
        <item>32.3535</item>
        <item>34.0867</item>
        <item>42.366</item>
        <item>51.1309</item>
        <item>59.52</item>
        <item>67.744</item>
        <item>75.9738</item>
        <item>84.6332</item>
        <item>94.1525</item>
        <item>102.2207</item>
        <item>110.4878</item>
        <item>117.0405</item>
        <item>124.3733</item>
        <item>130.9928</item>
        <item>140.4247</item>
        <item>149.3156</item>
        <item>157.1995</item>
        <item>165.3651</item>
        <item>173.2726</item>
        <item>181.4272</item>
        <item>189.1402</item>
        <item>197.5334</item>
        <item>205.6301</item>
        <item>213.9381</item>
        <item>222.2769</item>
        <item>230.0891</item>
        <item>238.6084</item>
        <item>246.5399</item>
        <item>255.6544</item>
        <item>263.6221</item>
        <item>271.9324</item>
        <item>279.1449</item>
        <item>288.5736</item>
        <item>297.6628</item>
        <item>306.1899</item>
        <item>314.4511</item>
        <item>322.1404</item>
        <item>330.969</item>
        <item>338.2251</item>
        <item>346.2251</item>
        <item>354.567</item>
        <item>370.799</item>
        <item>413.1738</item>
        <item>415.6397</item>
        <item>417.264</item>
        <item>419.264</item>
        <item>421.264</item>
        <item>424.646</item>
        <item>427.6287</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.

         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>2</item>
        <item>4</item>
        <item>6</item>
        <item>8</item>
        <item>10</item>
        <item>12</item>
        <item>16</item>
        <item>20</item>
        <item>24</item>
        <item>28</item>
        <item>32</item>
        <item>36</item>
        <item>40</item>
        <item>44</item>
        <item>48</item>
        <item>52</item>
        <item>56</item>
        <item>60</item>
        <item>64</item>
        <item>68</item>
        <item>72</item>
        <item>76</item>
        <item>80</item>
        <item>100</item>
        <item>120</item>
        <item>140</item>
        <item>160</item>
        <item>180</item>
        <item>200</item>
        <item>220</item>
        <item>240</item>
        <item>260</item>
        <item>280</item>
        <item>300</item>
        <item>320</item>
        <item>340</item>
        <item>360</item>
        <item>380</item>
        <item>400</item>
        <item>420</item>
        <item>440</item>
        <item>460</item>
        <item>480</item>
        <item>500</item>
        <item>520</item>
        <item>540</item>
        <item>560</item>
        <item>580</item>
        <item>600</item>
        <item>620</item>
        <item>640</item>
        <item>660</item>
        <item>680</item>
        <item>700</item>
        <item>720</item>
        <item>740</item>
        <item>760</item>
        <item>780</item>
        <item>800</item>
        <item>820</item>
        <item>840</item>
        <item>860</item>
        <item>880</item>
        <item>900</item>
        <item>920</item>
        <item>940</item>
        <item>960</item>
        <item>980</item>
        <item>1000</item>
        <item>1023</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>250</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>400</item>
        <item>500</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>300</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.

         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:

         // Device has a color adjustable battery light.
         LIGHTS_RGB_NOTIFICATION_LED = 1

         // Device has a color adjustable notification light.
         LIGHTS_RGB_BATTERY_LED = 2

         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)

         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8

         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16

         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32

         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64

         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128

         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">232</integer>

    <!-- Whether device has a notch -->
    <bool name="config_haveNotch">true</bool>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutout">M -270,0 L -270,89 L 270,89 L 270,0 Z</string>

    <!-- Height of the status bar -->
    <dimen name="status_bar_height_portrait">89.0px</dimen>
    <dimen name="status_bar_height_landscape">24.0dp</dimen>
</resources>
